<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="1" failed="1" ignored="0" total="6" passed="4">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="75183" started-at="2019-09-25T10:23:25 IST" finished-at="2019-09-25T10:24:40 IST">
    <groups>
    </groups>
    <test name="Default test" duration-ms="75183" started-at="2019-09-25T10:23:25 IST" finished-at="2019-09-25T10:24:40 IST">
      <class name="Case_Study.Reports">
        <test-method status="PASS" signature="startReport()[pri:0, instance:Case_Study.Reports@a7e666]" name="startReport" is-config="true" duration-ms="1296" started-at="2019-09-25T10:23:25 IST" finished-at="2019-09-25T10:23:27 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startReport -->
        <test-method status="FAIL" signature="failTest()[pri:0, instance:Case_Study.Reports@a7e666]" name="failTest" duration-ms="47047" started-at="2019-09-25T10:23:27 IST" finished-at="2019-09-25T10:24:14 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [NoTitle] but found [Home]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [NoTitle] but found [Home]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:575)
at org.testng.Assert.assertEquals(Assert.java:585)
at Case_Study.Reports.failTest(Reports.java:234)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:497)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1249)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failTest -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:Case_Study.Reports@a7e666]" name="getResult" is-config="true" duration-ms="6" started-at="2019-09-25T10:24:14 IST" finished-at="2019-09-25T10:24:14 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=failTest status=FAILURE method=Reports.failTest()[pri:0, instance:Case_Study.Reports@a7e666] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="SKIP" signature="skipTest()[pri:0, instance:Case_Study.Reports@a7e666]" name="skipTest" duration-ms="1" started-at="2019-09-25T10:24:14 IST" finished-at="2019-09-25T10:24:14 IST">
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Skipping - This is not ready for testing ]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Skipping - This is not ready for testing 
at Case_Study.Reports.skipTest(Reports.java:241)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:497)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1249)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- skipTest -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:Case_Study.Reports@a7e666]" name="getResult" is-config="true" duration-ms="1" started-at="2019-09-25T10:24:14 IST" finished-at="2019-09-25T10:24:14 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=skipTest status=SKIP method=Reports.skipTest()[pri:0, instance:Case_Study.Reports@a7e666] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="testRegistration()[pri:1, instance:Case_Study.Reports@a7e666]" name="testRegistration" duration-ms="11906" started-at="2019-09-25T10:24:14 IST" finished-at="2019-09-25T10:24:26 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRegistration -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:Case_Study.Reports@a7e666]" name="getResult" is-config="true" duration-ms="865" started-at="2019-09-25T10:24:26 IST" finished-at="2019-09-25T10:24:26 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testRegistration status=SUCCESS method=Reports.testRegistration()[pri:1, instance:Case_Study.Reports@a7e666] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="testLogin()[pri:2, instance:Case_Study.Reports@a7e666]" name="testLogin" duration-ms="686" started-at="2019-09-25T10:24:26 IST" finished-at="2019-09-25T10:24:27 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLogin -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:Case_Study.Reports@a7e666]" name="getResult" is-config="true" duration-ms="359" started-at="2019-09-25T10:24:27 IST" finished-at="2019-09-25T10:24:27 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testLogin status=SUCCESS method=Reports.testLogin()[pri:2, instance:Case_Study.Reports@a7e666] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="testCart()[pri:3, instance:Case_Study.Reports@a7e666]" name="testCart" duration-ms="4350" started-at="2019-09-25T10:24:27 IST" finished-at="2019-09-25T10:24:32 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCart -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:Case_Study.Reports@a7e666]" name="getResult" is-config="true" duration-ms="330" started-at="2019-09-25T10:24:32 IST" finished-at="2019-09-25T10:24:32 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testCart status=SUCCESS method=Reports.testCart()[pri:3, instance:Case_Study.Reports@a7e666] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="testPayment()[pri:4, instance:Case_Study.Reports@a7e666]" name="testPayment" duration-ms="6199" started-at="2019-09-25T10:24:32 IST" finished-at="2019-09-25T10:24:38 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPayment -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:Case_Study.Reports@a7e666]" name="getResult" is-config="true" duration-ms="406" started-at="2019-09-25T10:24:38 IST" finished-at="2019-09-25T10:24:39 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testPayment status=SUCCESS method=Reports.testPayment()[pri:4, instance:Case_Study.Reports@a7e666] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="endReport()[pri:0, instance:Case_Study.Reports@a7e666]" name="endReport" is-config="true" duration-ms="1619" started-at="2019-09-25T10:24:39 IST" finished-at="2019-09-25T10:24:40 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
      </class> <!-- Case_Study.Reports -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
